<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MvcContrib.Castle</name>
    </assembly>
    <members>
        <member name="T:MvcContrib.Castle.CastleBindAttribute">
            <summary>
            Parameter binder that uses the Castle DataBinder to bind action parameters.
            Example:
            <![CDATA[
            public ActionResult Save([CastleBind] Customer customer) {
             //...
            }
            ]]>
            </summary>
        </member>
        <member name="M:MvcContrib.Castle.CastleBindAttribute.#ctor(System.String)">
            <summary>
            Creates a new CastleBind attribute with the specified parameter prefix. 
            </summary>
            <param name="prefix">Prefix to use when extracting from the Request.Form.</param>
        </member>
        <member name="M:MvcContrib.Castle.CastleBindAttribute.#ctor">
            <summary>
            Creates a new CastleBind attribute. The name of the parameter will be used as the request prefix.
            </summary>
        </member>
        <member name="M:MvcContrib.Castle.CastleBindAttribute.BindModel(System.Web.Mvc.ModelBindingContext)">
            <summary>
            Binds the model object using a castle IDataBinder
            </summary>
            <param name="bindingContext">The current binding context</param>
            <returns>A ModelBinderResult containing the bound object</returns>
        </member>
        <member name="M:MvcContrib.Castle.CastleBindAttribute.LocateBinder(System.Web.Mvc.ControllerContext)">
            <summary>
            Finds the binder to use. If the controller implements ICastleBindingContainer then its binder is used. Otherwise, a new DataBinder is created.
            </summary>
            <returns></returns>
        </member>
        <member name="M:MvcContrib.Castle.CastleBindAttribute.CreateBinder">
            <summary>
            Creates the binder to use.
            </summary>
            <returns>IDataBinder</returns>
        </member>
        <member name="P:MvcContrib.Castle.CastleBindAttribute.Exclude">
            <summary>
            Properties to exclude from binding
            </summary>
        </member>
        <member name="T:MvcContrib.Castle.CastleSimpleBinder">
            <summary>
            Simple IParameterBinder implementation that uses Castle's DefaultConverter.
            </summary>
        </member>
        <member name="M:MvcContrib.Castle.CastleSimpleBinder.BindModel(System.Web.Mvc.ModelBindingContext)">
            <summary>
            Looks for a parameter with the specified name in the Request and the RouteData and converts it to the specified type.
            </summary>
            <returns>The converted object, or the default value for the type.</returns>
        </member>
        <member name="M:MvcContrib.Castle.HtmlExtensionDuck.AddExtension(System.Type)">
            <summary>
             Registers an extension type for evaluation later during duck typing interrogation.
             
             Add your own extensions here in Application_Start for use in NVelocity views.
            </summary>
            <param name="type"></param>
        </member>
        <member name="T:MvcContrib.Castle.ICastleBindingContainer">
            <summary>
            Controllers that implement this interface will have access to the IDataBinder instance used by the CastleBinderAttribute.
            </summary>
        </member>
        <member name="P:MvcContrib.Castle.ICastleBindingContainer.Binder">
            <summary>
            The Binder that is used by the CastleBindAttribute to perform parameter binding.
            </summary>
        </member>
        <member name="T:MvcContrib.Castle.WindsorControllerFactory">
            <summary>
            Controller Factory class for instantiating controllers using the Windsor IoC container.
            </summary>
        </member>
        <member name="M:MvcContrib.Castle.WindsorControllerFactory.#ctor(Castle.Windsor.IWindsorContainer)">
            <summary>
            Creates a new instance of the <see cref="T:MvcContrib.Castle.WindsorControllerFactory"/> class.
            </summary>
            <param name="container">The Windsor container instance to use when creating controllers.</param>
        </member>
    </members>
</doc>
